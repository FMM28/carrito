const comprar = async (req, res) => {
    const { carrito, carrito_total, user } = req.session;
    const { metodo_pago } = req.body; // Obtenemos el método de pago desde el formulario.

    // Validaciones iniciales
    if (!carrito || carrito.length === 0) {
        req.flash("error", "El carrito está vacío.");
        return res.redirect(req.get('Referer'));
    }

    if (!user) {
        req.flash("error", "Inicia sesión antes de comprar.");
        return res.redirect('/users/login');
    }

    if (!metodo_pago || !['efectivo', 'tarjeta', 'transferencia'].includes(metodo_pago)) {
        req.flash("error", "Selecciona un método de pago válido.");
        return res.redirect(req.get('Referer'));
    }

    try {
        // Crear un nuevo ticket
        const nuevoTicket = await Ticket.create({
            id_usuario: user,
            total: carrito_total,
        });

        // Crear el registro de pago asociado al ticket
        await Pago.create({
            id_ticket: nuevoTicket.id_ticket,
            forma_pago: metodo_pago,
            pago: carrito_total,
        });

        // Procesar cada producto en el carrito
        for (const item of carrito) {
            const producto = await Producto.findOne({ where: { id_producto: item.id_producto } });

            // Verificar stock
            if (producto.stock < item.cantidad) {
                req.flash(
                    "error",
                    Stock insuficiente para el producto ${item.nombre}.
                );
                return res.redirect(req.get('Referer'));
            }

            // Crear relación Ticket-Producto
            await TicketProducto.create({
                id_ticket: nuevoTicket.id_ticket,
                id_producto: item.id_producto,
                cantidad: item.cantidad,
                precio: item.precio, // Precio individual del producto
            });

            // Actualizar stock del producto
            await producto.update({ stock: producto.stock - item.cantidad });
        }

        // Limpiar carrito
        req.session.carrito = [];
        req.session.carrito_total = 0;

        req.flash("success", "Compra registrada exitosamente.");
        return res.redirect(req.get('Referer'));
    } catch (error) {
        console.error("Error al registrar la compra:", error);
        req.flash("error", "Ocurrió un error al procesar la compra.");
        return res.redirect(req.get('Referer'));
    }
};

export { mostrarTicketsUsuario, comprar };
